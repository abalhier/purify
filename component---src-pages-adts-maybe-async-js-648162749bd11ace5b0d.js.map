{"version":3,"sources":["webpack:///./src/pages/adts/MaybeAsync.js","webpack:///./src/components/DataTypeContent.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.find.js","webpack:///./src/components/DataTypeMethod.js"],"names":["DataTypeContent","data","datatypes","find","x","name","Container","styled","div","Title","h1","Description","TopicHeader","h2","TypeclassBadges","TypeclassBadge","span","TypeclassTooltip","ExamplesContainer","ExampleHeader","Example","Guide","Link","adt","props","location","implements","map","typeclass","key","length","title","description","examples","example","language","style","highlightStyle","content","join","guides","guide","to","link","methods","DataTypeMethod","$export","$find","forced","Array","P","F","callbackfn","this","arguments","undefined","MethodName","a","MethodSignature","ml","ts","MethodSignatureText","MethodExample","MethodExampleColumn","MethodDescription","method","id","href","signatureML","signatureTS","input","output"],"mappings":"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","file":"component---src-pages-adts-maybe-async-js-648162749bd11ace5b0d.js","sourcesContent":["import DataTypeContent from '../../components/DataTypeContent'\r\nimport data from '../../data'\r\n\r\nexport default DataTypeContent(\r\n  data.datatypes.find(x => x.name === 'MaybeAsync')\r\n)\r\n","import React from 'react'\r\nimport Link from 'gatsby-link'\r\nimport styled from 'styled-components'\r\nimport DataTypeMethod from './DataTypeMethod'\r\nimport SyntaxHighlighter from 'react-syntax-highlighter'\r\nimport highlightStyle from 'react-syntax-highlighter/styles/hljs/googlecode'\r\nimport Layout from './Layout'\r\n\r\nconst Container = styled.div``\r\n\r\nconst Title = styled.h1`\r\n  font-weight: inherit;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    text-align: center;\r\n    margin-top: 0;\r\n  }\r\n`\r\n\r\nconst Description = styled.div`\r\n  padding-right: 15%;\r\n  font-size: 1.05em;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding-right: 0;\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst TopicHeader = styled.h2`\r\n  font-weight: inherit;\r\n  margin-bottom: 0;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    text-align: center;\r\n  }\r\n`\r\nconst TypeclassBadges = styled.div`\r\n  margin-top: -20px;\r\n  padding-bottom: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nconst TypeclassBadge = styled.span`\r\n  background-color: #af87e6;\r\n  border-radius: 6px;\r\n  color: white;\r\n  padding: 0px 5px;\r\n  font-size: 13px;\r\n  margin-right: 4px;\r\n  margin-bottom: 5px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst TypeclassTooltip = styled.div`\r\n  background-color: #975ce7;\r\n  border-radius: 100%;\r\n  width: 17px;\r\n  position: relative;\r\n  height: 17px;\r\n  margin-top: 1px;\r\n  margin-left: 4px;\r\n\r\n  &::after {\r\n    content: '?';\r\n    color: white;\r\n    position: absolute;\r\n    left: 5px;\r\n    top: -2px;\r\n    font-size: 13px;\r\n  }\r\n\r\n  @media (hover: none) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ExamplesContainer = styled.div`\r\n  pre {\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst ExampleHeader = styled.div`\r\n  text-align: center;\r\n  background-color: #f9f4f4;\r\n  padding: 4px;\r\n`\r\n\r\nconst Example = styled.div`\r\n  max-width: 650px;\r\n  margin: 10px 0;\r\n  border: 1px solid #f3eeee;\r\n`\r\n\r\nconst Guide = styled(Link)`\r\n  display: inline-block;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst DataTypeContent = adt => props => (\r\n  <Layout location={props.location}>\r\n    <Container>\r\n      <Title>{adt.name}</Title>\r\n      <TypeclassBadges>\r\n        {adt.implements.map(typeclass => (\r\n          <TypeclassBadge key={typeclass}>{typeclass}</TypeclassBadge>\r\n        ))}\r\n        {adt.implements.length > 0 && (\r\n          <TypeclassTooltip title=\"The badges on the left list all available fantasy-land instances for this data type\" />\r\n        )}\r\n      </TypeclassBadges>\r\n      <Description>{adt.description}</Description>\r\n      <ExamplesContainer>\r\n        {adt.examples.map(example => (\r\n          <Example>\r\n            <ExampleHeader>{example.title}</ExampleHeader>\r\n            <SyntaxHighlighter language=\"javascript\" style={highlightStyle}>\r\n              {example.content.join('\\n')}\r\n            </SyntaxHighlighter>\r\n          </Example>\r\n        ))}\r\n        {adt.guides.length > 0 && (\r\n          <Example>\r\n            <ExampleHeader>Official Guides</ExampleHeader>\r\n            {adt.guides.map(guide => (\r\n              <Guide to={guide.link}>{guide.title}</Guide>\r\n            ))}\r\n          </Example>\r\n        )}\r\n      </ExamplesContainer>\r\n      {adt.content.map(x => (\r\n        <>\r\n          <TopicHeader>{x.title}</TopicHeader>\r\n          {x.methods.map(DataTypeMethod)}\r\n        </>\r\n      ))}\r\n    </Container>\r\n  </Layout>\r\n)\r\n\r\nexport default DataTypeContent\r\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Highlight } from './HL'\r\n\r\nconst Container = styled.div`\r\n  padding: 15px 0px;\r\n  border-bottom: 1px solid #b8d1e2;\r\n  border-style: dashed;\r\n  border-left: 0;\r\n  border-top: 0;\r\n  border-right: 0;\r\n`\r\n\r\nconst MethodName = styled.a`\r\n  font-size: 19px;\r\n  color: #3b74d7;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    display: block;\r\n    text-align: center;\r\n    padding-bottom: 5px;\r\n  }\r\n`\r\n\r\nconst MethodSignature = styled.span`\r\n  display: inline-block;\r\n  font-family: Consolas, Menlo, monospace;\r\n  background-color: #e7edf1;\r\n  border-radius: 4px;\r\n  font-size: 0.8rem;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  &:before {\r\n    content: ${props => (props.ml ? \"'Î»'\" : \"'TS'\")};\r\n    background-color: ${props => (props.ml ? '#9756f3' : '#3b74d7')};\r\n    color: white;\r\n    border-bottom-left-radius: 4px;\r\n    border-top-left-radius: 4px;\r\n    padding: 3px 5px;\r\n    display: inline-block;\r\n    min-width: 13px;\r\n    text-align: center;\r\n    letter-spacing: ${props => (props.ts ? '-1px' : '0')};\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    position: relative;\r\n    text-align: center;\r\n    width: 100%;\r\n    margin-bottom: 0;\r\n    padding: 5px;\r\n    border-top-right-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n    border-top: 1px solid #dfe4e6;\r\n    font-size: 13px;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n\r\n    &:before {\r\n      position: absolute;\r\n      left: 0;\r\n      padding: 5px 5px;\r\n      margin-top: -5px;\r\n    }\r\n  }\r\n`\r\n\r\nconst MethodSignatureText = styled.span`\r\n  padding: 0 6px;\r\n`\r\n\r\nconst MethodExample = styled.div`\r\n  display: flex;\r\n  background-color: #f0f4ff;\r\n  border-left: 4px solid #8acefb;\r\n  padding: 5px;\r\n  margin: 5px 0;\r\n  overflow-x: scroll;\r\n  max-width: calc(95vw - 200px);\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    max-width: 100vw;\r\n  }\r\n`\r\n\r\nconst MethodExampleColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  pre {\r\n    border-radius: 2px;\r\n    min-height: 20px;\r\n    display: flex !important;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin-bottom: 5px;\r\n    margin-top: 0;\r\n    background: #f1f5ff !important;\r\n    padding: 0.3em 0.4em !important;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst MethodDescription = styled.div`\r\n  width: 70%;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 10px 0;\r\n  }\r\n`\r\n\r\nconst DataTypeMethod = method => (\r\n  <Container key={method.name}>\r\n    <MethodName id={method.name} href={'#' + method.name}>\r\n      {method.name}\r\n    </MethodName>\r\n    <div>\r\n      {method.signatureML && (\r\n        <MethodSignature ml>\r\n          <MethodSignatureText>{method.signatureML}</MethodSignatureText>\r\n        </MethodSignature>\r\n      )}\r\n      {method.signatureTS && (\r\n        <MethodSignature ts>\r\n          <MethodSignatureText>{method.signatureTS}</MethodSignatureText>\r\n        </MethodSignature>\r\n      )}\r\n      <MethodDescription>{method.description}</MethodDescription>\r\n      {method.examples.length > 0 && (\r\n        <MethodExample>\r\n          <MethodExampleColumn>\r\n            {method.examples.map(example => (\r\n              <Highlight key={example.input}>{example.input}</Highlight>\r\n            ))}\r\n          </MethodExampleColumn>\r\n\r\n          <MethodExampleColumn>\r\n            {method.examples.map(example => (\r\n              <Highlight key={example.input}>â</Highlight>\r\n            ))}\r\n          </MethodExampleColumn>\r\n\r\n          <MethodExampleColumn>\r\n            {method.examples.map(example => (\r\n              <Highlight key={example.input}>{example.output}</Highlight>\r\n            ))}\r\n          </MethodExampleColumn>\r\n        </MethodExample>\r\n      )}\r\n    </div>\r\n  </Container>\r\n)\r\n\r\nexport default DataTypeMethod\r\n"],"sourceRoot":""}