{"version":3,"sources":["webpack:///./src/pages/changelog/0.16.js"],"names":["Title","styled","h1","Subtitle","div","Topic","h2","v016","props","location","to","style","color"],"mappings":"8FAAA,yFAMMA,EAAQC,IAAOC,GAAV,8DAAGD,CAAH,sBAILE,EAAWF,IAAOG,IAAV,iEAAGH,CAAH,0BAIRI,EAAQJ,IAAOK,GAAV,8DAAGL,CAAH,yBAsLIM,UAlLF,SAAAC,GAAK,OAChB,kBAAC,IAAD,CAAQC,SAAUD,EAAMC,UACtB,kBAACT,EAAD,qBACA,kBAACG,EAAD,yBACA,sEACyC,IACvC,kBAAC,IAAD,CAAMO,GAAG,oBAAT,mBAFF,6BAGM,kBAAC,IAAD,CAAMA,GAAG,QAAT,OAHN,SAIE,6BACA,6BALF,qLASE,kBAACL,EAAD,KACE,0BAAMM,MAAO,CAAEC,MAAO,YAAtB,aADF,UAGA,4BACE,uCACU,kBAAC,IAAD,qBADV,OACmC,kBAAC,IAAD,gBADnC,KAGA,uCACU,kBAAC,IAAD,eADV,oDAEO,kBAAC,IAAD,kBAFP,yCAKF,kBAACP,EAAD,KACE,0BAAMM,MAAO,CAAEC,MAAO,YAAtB,aADF,qBAGA,4BACE,gDACmB,kBAAC,IAAD,gBADnB,sHAKA,uCACU,kBAAC,IAAD,4BADV,8HAGoB,kBAAC,IAAD,cAHpB,yEAOF,kBAACP,EAAD,KACE,0BAAMM,MAAO,CAAEC,MAAO,YAAtB,aADF,+BAIA,4BACE,uCACU,kBAAC,IAAD,oBADV,+DAEuB,kBAAC,IAAD,oBAFvB,6FAKA,qCACQ,kBAAC,IAAD,oBADR,kFAEoC,kBAAC,IAAD,mBAFpC,IAEyD,IACvD,kBAAC,IAAD,kBAHF,QAGyB,kBAAC,IAAD,oBAHzB,iBAIE,6BAJF,mEAKmE,IACjE,kBAAC,IAAD,+BANF,OAMqC,kBAAC,IAAD,+BANrC,MASF,kBAACP,EAAD,KACE,0BAAMM,MAAO,CAAEC,MAAO,YAAtB,cADF,iDAIA,4BACE,yFAC6D,IAC3D,kBAAC,IAAD,oBAFF,qHAGkE,6BAHlE,8HAOA,gGAGA,qEACwC,kBAAC,IAAD,cADxC,KACwD,kBAAC,IAAD,eADxD,IACyE,IACvE,kBAAC,IAAD,iBAFF,KAEqB,kBAAC,IAAD,mBAFrB,KAE0C,kBAAC,IAAD,oBAF1C,KAIA,uEAC0C,kBAAC,IAAD,aAD1C,KACyD,kBAAC,IAAD,eADzD,KAEI,kBAAC,IAAD,gBAFJ,KAEsB,kBAAC,IAAD,cAFtB,KAEsC,kBAAC,IAAD,aAFtC,KAEqD,kBAAC,IAAD,WAFrD,IAEkE,IAChE,kBAAC,IAAD,YAHF,KAGgB,kBAAC,IAAD,eAHhB,KAGiC,kBAAC,IAAD,sBAHjC,IAGyD,IACvD,kBAAC,IAAD,kBAJF,KAMA,oEACuC,kBAAC,IAAD,kBADvC,IAC2D,IACzD,kBAAC,IAAD,kBAFF,KAEsB,kBAAC,IAAD,oBAFtB,KAIA,uEAC0C,kBAAC,IAAD,eAD1C,IAC2D,IACzD,kBAAC,IAAD,kBAFF,KAEsB,kBAAC,IAAD,aAFtB,KAEqC,kBAAC,IAAD,WAFrC,KAEkD,kBAAC,IAAD,YAFlD,IAEgE,IAC9D,kBAAC,IAAD,eAHF,KAGmB,kBAAC,IAAD,eAHnB,KAGoC,kBAAC,IAAD,kBAHpC,KAKA,+EACmD,IACjD,kBAAC,IAAD,0BAFF,qIAOF,kBAACP,EAAD,KACE,0BAAMM,MAAO,CAAEC,MAAO,YAAtB,cADF,qBAGA,4BACE,8DACiC,kBAAC,IAAD,kBAEjC,gEACmC,kBAAC,IAAD,iBADnC,OACyD,IACvD,kBAAC,IAAD,mBAEF,2EAC8C,kBAAC,IAAD,qBAD9C,qIAKA,gLAMF,kBAACP,EAAD,KACE,0BAAMM,MAAO,CAAEC,MAAO,YAAtB,cADF,UAGA,4BACE,iEACoC,kBAAC,IAAD,iBADpC,IACuD,IACrD,kBAAC,IAAD,oBAFF,KAEwB,kBAAC,IAAD,kBAFxB,KAIA,oEACuC,kBAAC,IAAD,eADvC,8IAKA,yDAC4B,kBAAC,IAAD,iBAD5B,8DAIA,8DACiC,kBAAC,IAAD,mBADjC,wDAEuC,kBAAC,IAAD,eAFvC,wCAIE,6BAJF,wGAQA,8CACiB,kBAAC,IAAD,cADjB,6BAC0D,IACxD,kBAAC,IAAD,wBAFF,gDAEwE,IACtE,kBAAC,IAAD,iBAHF,MAMF,kBAACP,EAAD,KACE,0BAAMM,MAAO,CAAEC,MAAO,YAAtB,cADF,UAGA,4BACE,gEACmC,kBAAC,IAAD,aADnC,QACqD,kBAAC,IAAD,cADrD,sDAIA,8EACiD,kBAAC,IAAD,aADjD,MAIF,kBAACP,EAAD,KACE,0BAAMM,MAAO,CAAEC,MAAO,YAAtB,aADF,UAGA,4BACE,uDAC0B,kBAAC,IAAD,cAD1B","file":"component---src-pages-changelog-0-16-js-0514d4deab66f0068ada.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Link from 'gatsby-link'\r\nimport Layout from '../../components/Layout'\r\nimport { HL } from '../../components/HL'\r\n\r\nconst Title = styled.h1`\r\n  margin-bottom: 0;\r\n`\r\n\r\nconst Subtitle = styled.div`\r\n  padding-bottom: 30px;\r\n`\r\n\r\nconst Topic = styled.h2`\r\n  font-weight: normal;\r\n`\r\n\r\nconst v016 = props => (\r\n  <Layout location={props.location}>\r\n    <Title>Purify v0.16</Title>\r\n    <Subtitle>November 7, 2020</Subtitle>\r\n    <div>\r\n      Not sure what purify is? Check out the{' '}\r\n      <Link to=\"/getting-started\">Getting Started</Link> page. Also check out\r\n      the <Link to=\"/faq\">FAQ</Link> page!\r\n      <br />\r\n      <br />\r\n      This is a huge release with a lot of changes and I'm really exited! 0.16\r\n      will be the final 0.x version before the official 1.0.0 release, you can\r\n      think of 0.16 as a Version 1 RC.\r\n      <Topic>\r\n        <span style={{ color: '#d22626' }}>Breaking:</span> Codec\r\n      </Topic>\r\n      <ul>\r\n        <li>\r\n          Renamed <HL>GetInterface</HL> to <HL>GetType</HL>.\r\n        </li>\r\n        <li>\r\n          Running <HL>decode</HL> will not populate a field inside an object\r\n          it's <HL>undefined</HL>, instead it will just leave it out.\r\n        </li>\r\n      </ul>\r\n      <Topic>\r\n        <span style={{ color: '#d22626' }}>Breaking:</span> Either and Maybe\r\n      </Topic>\r\n      <ul>\r\n        <li>\r\n          Removed internal <HL>__value</HL> property inside both Either and\r\n          Maybe. It was not supposed to be used anyway so there shouldn't be any\r\n          breakages.\r\n        </li>\r\n        <li>\r\n          Running <HL>Either#unsafeDecode</HL> used to throw a generic error if\r\n          the value inside was Left. That error is still there, but if the value\r\n          is an instance of <HL>Error</HL>, it will throw it instead. This makes\r\n          debugging and logging easier.\r\n        </li>\r\n      </ul>\r\n      <Topic>\r\n        <span style={{ color: '#d22626' }}>Breaking:</span> EitherAsync and\r\n        MaybeAsync\r\n      </Topic>\r\n      <ul>\r\n        <li>\r\n          Removed <HL>liftPromise</HL> from both EitherAsync and MaybeAsync.\r\n          With the addition of <HL>PromiseLike</HL> support this utility was\r\n          just an alias for the normal constructors, making it redundant.\r\n        </li>\r\n        <li>\r\n          Since <HL>PromiseLike</HL> is now supported in both modules you should\r\n          be using the special constructors <HL>liftEither</HL>,{' '}\r\n          <HL>liftMaybe</HL> and <HL>fromPromise</HL> way less now.\r\n          <br />\r\n          Because of that they are now static methods now (e.g. to use run{' '}\r\n          <HL>EitherAsync.liftEither</HL> or <HL>MaybeAsync.fromPromise</HL>)\r\n        </li>\r\n      </ul>\r\n      <Topic>\r\n        <span style={{ color: '#0a9e1b' }}>Additions:</span> EitherAsync and\r\n        MaybeAsync (there are a lot)\r\n      </Topic>\r\n      <ul>\r\n        <li>\r\n          Both EitherAsync and MaybeAsync now extend and support the{' '}\r\n          <HL>PromiseLike</HL> interface. This means you can await them and you\r\n          can interchange *Async and PromiseLike in most utility methods. <br />\r\n          This is a huge win for productivity and reducing boilerplate, I hope\r\n          we get to see cool examples of how this helps people.\r\n        </li>\r\n        <li>\r\n          Both EitherAsync and MaybeAsync are now fantasy-land compatible.\r\n        </li>\r\n        <li>\r\n          Added static methods to EitherAsync - <HL>lefts</HL>, <HL>rights</HL>,{' '}\r\n          <HL>sequence</HL>, <HL>liftEither</HL>, <HL>fromPromise</HL>.\r\n        </li>\r\n        <li>\r\n          Added instance methods to EitherAsync - <HL>swap</HL>, <HL>ifLeft</HL>\r\n          , <HL>ifRight</HL>, <HL>bimap</HL>, <HL>join</HL>, <HL>ap</HL>,{' '}\r\n          <HL>alt</HL>, <HL>extend</HL>, <HL>leftOrDefault</HL>,{' '}\r\n          <HL>orDefault</HL>.\r\n        </li>\r\n        <li>\r\n          Added static methods to MaybeAsync - <HL>catMaybes</HL>,{' '}\r\n          <HL>liftMaybe</HL>, <HL>fromPromise</HL>.\r\n        </li>\r\n        <li>\r\n          Added instance methods to EitherAsync - <HL>ifJust</HL>,{' '}\r\n          <HL>ifNothing</HL>, <HL>join</HL>, <HL>ap</HL>, <HL>alt</HL>,{' '}\r\n          <HL>extend</HL>, <HL>filter</HL>, <HL>orDefault</HL>.\r\n        </li>\r\n        <li>\r\n          EitherAsync now has a looser type definition for{' '}\r\n          <HL>EitherAsync#chain</HL> as it will merge the two errors together in\r\n          an union type instead of showing a compiler error if the error types\r\n          are different.\r\n        </li>\r\n      </ul>\r\n      <Topic>\r\n        <span style={{ color: '#0a9e1b' }}>Additions:</span> Either and Maybe\r\n      </Topic>\r\n      <ul>\r\n        <li>\r\n          Added static method to Maybe - <HL>isMaybe.</HL>\r\n        </li>\r\n        <li>\r\n          Added static methods to Either - <HL>isEither</HL> and{' '}\r\n          <HL>sequence.</HL>\r\n        </li>\r\n        <li>\r\n          Either now has a looser type definition for <HL>Either#chain</HL> as\r\n          it will merge the two errors together in an union type instead of\r\n          showing a compiler error if the error types are different .\r\n        </li>\r\n        <li>\r\n          Either now has a runtime tag so that values are easier to debug\r\n          (previously when you logged an Either you couldn't tell if it's Left\r\n          or Right).\r\n        </li>\r\n      </ul>\r\n      <Topic>\r\n        <span style={{ color: '#0a9e1b' }}>Additions:</span> Codec\r\n      </Topic>\r\n      <ul>\r\n        <li>\r\n          Added new codecs and combinators: <HL>nullable</HL>,{' '}\r\n          <HL>enumeration</HL>, <HL>intersect</HL>.\r\n        </li>\r\n        <li>\r\n          Added a new property of each codec - <HL>schema</HL>, it returns a\r\n          JSON Schema V6 of that codec so that you can reuse validation in\r\n          non-JavaScript environments (tools, other languages etc.).\r\n        </li>\r\n        <li>\r\n          Added a new utility type, <HL>FromType</HL>, that helps with creating\r\n          codecs based on existing types.\r\n        </li>\r\n        <li>\r\n          Added a new utility function - <HL>parseError</HL>, that takes an\r\n          error string generated after running <HL>decode</HL> on a value and\r\n          returns a meta object\r\n          <br />\r\n          which you can use to create all kinds of stuff - from custom error\r\n          reporters to recovery mechanisms.\r\n        </li>\r\n        <li>\r\n          If you use the <HL>maybe</HL> codec combinator inside a{' '}\r\n          <HL>Codec.interface</HL> it will handle optional properties just like{' '}\r\n          <HL>optional</HL>.\r\n        </li>\r\n      </ul>\r\n      <Topic>\r\n        <span style={{ color: '#0a9e1b' }}>Additions:</span> Other\r\n      </Topic>\r\n      <ul>\r\n        <li>\r\n          Added two new methods to Tuple - <HL>some</HL> and <HL>every</HL> that\r\n          act like the Array methods of the same name.\r\n        </li>\r\n        <li>\r\n          Added a new utility function to NonEmptyList - <HL>tail</HL>.\r\n        </li>\r\n      </ul>\r\n      <Topic>\r\n        <span style={{ color: '#efb022' }}>Bugfixes:</span> Codec\r\n      </Topic>\r\n      <ul>\r\n        <li>\r\n          Fixed a critical bug in <HL>oneOf</HL> that caused encoding to fail.\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\nexport default v016\r\n"],"sourceRoot":""}